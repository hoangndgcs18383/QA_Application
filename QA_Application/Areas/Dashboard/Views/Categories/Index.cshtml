@model IEnumerable<QA_Application.Models.Category>

@{
    ViewData["Title"] = "Index";
}

<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index">Category</a></li>
  </ol>
</nav>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">List Category</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                <tr>
                    <th>Categoty Name</th>
                    <th>Description</th>
                    <th>Closure Date</th>
                    <th>Final Closure Date</th>
                    <th>Status</th>
                    <th>Link</th>

                </tr>
                </thead>
                <tbody>
@foreach (var item in Model)
{
    var predix = "department";
    var deleteAction = "Delete";

    var delete = new ActionPopup {
    Id = @item.Id,
    Title = @item.CategoryName,
    Predix = predix,
    Name = deleteAction,
    Action = deleteAction,
    Labell = "labelledbyDelete"
};

    <partial name="_ActionPopup" model="delete"></partial>

    await RenderCategory(item, 0);
}
                </tbody>
            </table>
        </div>
    </div>
</div>

@{
    async Task RenderCategory(Category item, int level)
    {
        string prefix = String.Concat(Enumerable.Repeat("*", level));
        var predix = "department";
        var deleteAction = "Delete";

        <tr>
            <td data-title="Name">
                @prefix
                <a asp-action="Edit" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.CategoryName)</a>
            </td>
            <td data-title="Description">@Html.DisplayFor(modelItem => item.Description)</td>
            <td data-title="FirstDeadline">
                @Html.DisplayFor(modelItem => item.FirstDeadline)
            </td>
            <td data-title="FinalDeadline">@Html.DisplayFor(modelItem => item.FinalDeadline)</td>
            @if(item.FinalDeadline > DateTime.Now)
            {
                <td class="center_item" data-title="Status">
                    <i class='bx bxs-circle icon_active'></i>
                    Active</td>
            }
            else
            {
                <td data-title="Status">Inactive</td>
            }
            <td data-title="Link">
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a href="#" data-toggle="modal" data-target="#@predix@item.Id@deleteAction">Delete</a>
            </td>
        </tr>
        if(item.CategoryChildren?.Count > 0)
        {
            foreach(var cCat in item.CategoryChildren)
            {
                await RenderCategory(cCat, level + 1);
            }
        }
    }
}



@section Scripts {
    <partial name="~/Views/Shared/_AlertifyPartial.cshtml"/>
}